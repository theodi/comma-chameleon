// Generated by CoffeeScript 1.9.3
(function() {
  var BrowserWindow, assert, crashReporter, formidable, http, path, remote, url;

  assert = require('assert');

  path = require('path');

  http = require('http');

  url = require('url');

  remote = require('remote');

  formidable = require('formidable');

  crashReporter = remote.require('crash-reporter');

  BrowserWindow = remote.require('browser-window');

  describe('crash-reporter module', function() {
    var fixtures, w;
    fixtures = path.resolve(__dirname, 'fixtures');
    w = null;
    beforeEach(function() {
      return w = new BrowserWindow({
        show: false
      });
    });
    afterEach(function() {
      return w.destroy();
    });
    if (process.platform === 'win32' && process.arch === 'x64') {
      return;
    }
    return it('should send minidump when renderer crashes', function(done) {
      var port, server;
      this.timeout(60000);
      server = http.createServer(function(req, res) {
        var form;
        form = new formidable.IncomingForm();
        process.throwDeprecation = false;
        return form.parse(req, function(error, fields, files) {
          process.throwDeprecation = true;
          assert.equal(fields['prod'], 'Electron');
          assert.equal(fields['ver'], process.versions['electron']);
          assert.equal(fields['process_type'], 'renderer');
          assert.equal(fields['platform'], process.platform);
          assert.equal(fields['extra1'], 'extra1');
          assert.equal(fields['extra2'], 'extra2');
          assert.equal(fields['_productName'], 'Zombies');
          assert.equal(fields['_companyName'], 'Umbrella Corporation');
          assert.equal(fields['_version'], require('remote').require('app').getVersion());
          assert(files['upload_file_minidump']['name'] != null);
          res.end('abc-123-def');
          server.close();
          return done();
        });
      });
      port = remote.process.port;
      return server.listen(port, '127.0.0.1', function() {
        port = server.address().port;
        remote.process.port = port;
        url = url.format({
          protocol: 'file',
          pathname: path.join(fixtures, 'api', 'crash.html'),
          search: "?port=" + port
        });
        crashReporter.start({
          'submitUrl': 'http://127.0.0.1:' + port
        });
        return w.loadUrl(url);
      });
    });
  });

}).call(this);
